// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(GameContext))]
    partial class GameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Model.Chest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Food")
                        .HasColumnType("float");

                    b.Property<double>("Gem")
                        .HasColumnType("float");

                    b.Property<double>("Glasware")
                        .HasColumnType("float");

                    b.Property<double>("Gold")
                        .HasColumnType("float");

                    b.Property<double>("Iron")
                        .HasColumnType("float");

                    b.Property<double>("Marble")
                        .HasColumnType("float");

                    b.Property<double>("Silk")
                        .HasColumnType("float");

                    b.Property<double>("Stone")
                        .HasColumnType("float");

                    b.Property<double>("Straw")
                        .HasColumnType("float");

                    b.Property<double>("Tools")
                        .HasColumnType("float");

                    b.Property<double>("Weapons")
                        .HasColumnType("float");

                    b.Property<double>("Wood")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Chest");
                });

            modelBuilder.Entity("Model.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Model.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Profession");
                });

            modelBuilder.Entity("Model.TechnologyAbilityImpact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AbilityType")
                        .HasColumnType("int");

                    b.Property<double>("Impact")
                        .HasColumnType("float");

                    b.Property<int?>("ProfessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionId");

                    b.ToTable("TechnologyAbilityImpact");
                });

            modelBuilder.Entity("Model.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChestId")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<double>("Pop")
                        .HasColumnType("float");

                    b.Property<int>("UnitJobsId")
                        .HasColumnType("int");

                    b.Property<int>("UnitType")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChestId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("UnitJobsId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Model.UnitJobs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("JobScheduleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UnitJobs");
                });

            modelBuilder.Entity("Model.Profession", b =>
                {
                    b.HasOne("Model.Unit", null)
                        .WithMany("Professions")
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("Model.TechnologyAbilityImpact", b =>
                {
                    b.HasOne("Model.Profession", null)
                        .WithMany("AffectingAbilities")
                        .HasForeignKey("ProfessionId");
                });

            modelBuilder.Entity("Model.Unit", b =>
                {
                    b.HasOne("Model.Chest", "Chest")
                        .WithMany()
                        .HasForeignKey("ChestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Player", null)
                        .WithMany("Units")
                        .HasForeignKey("PlayerId");

                    b.HasOne("Model.UnitJobs", "UnitJobs")
                        .WithMany()
                        .HasForeignKey("UnitJobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chest");

                    b.Navigation("UnitJobs");
                });

            modelBuilder.Entity("Model.Player", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("Model.Profession", b =>
                {
                    b.Navigation("AffectingAbilities");
                });

            modelBuilder.Entity("Model.Unit", b =>
                {
                    b.Navigation("Professions");
                });
#pragma warning restore 612, 618
        }
    }
}
